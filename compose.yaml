services:
  express:
    image: concierge-api
    env_file: .env
    build:
      context: .
    expose:
      - "3000"
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - nginx-express
      - mongo-express
      - rabbitmq-express
    depends_on:
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  nginx:
    image: nginx:1.27-alpine
    restart: always
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - express
    networks:
      - nginx-express

  mongo:
    image: mongo:6
    restart: always
    env_file: .env
    ports:
      - "27017:27017"
    networks:
      - mongo-express
    volumes:
      - mongo:/data/db

  rabbitmq:
    image: "rabbitmq:3-management"
    restart: always
    env_file: .env
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - rabbitmq-express
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  worker:
    image: concierge-api
    command: node ./src/bin/worker
    env_file: .env
    build:
      context: .
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - mongo-express
      - rabbitmq-express
    depends_on:
      mongo:
        condition: service_started
      rabbitmq:
        condition: service_healthy

networks:
  nginx-express:
  mongo-express:
  rabbitmq-express:

volumes:
  mongo:
  rabbitmq:
